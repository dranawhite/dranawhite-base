<configuration>

    <jmxConfigurator />

    <property name = "path.log" value = "${catalina.base}/business_logs" />
    <property name = "framework.level" value = "INFO" />

    <appender name = "STDOUT" class = "ch.qos.logback.core.ConsoleAppender">
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] [%logger{80}] [%msg]%n
            </pattern>
        </encoder>
    </appender>

    <appender name = "FILE" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class = "ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <File>${path.log}/business.log</File>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${path.log}/business-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy
                    class = "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] [%logger{80}] [%msg]%n
            </pattern>
        </encoder>
    </appender>

    <appender name = "DUBBO_CONSUMER" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class = "ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <File>${path.log}/dubbo-consumer.log</File>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${path.log}/dubbo-consumer-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy
                    class = "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] [%logger{80}] [%msg]%n
            </pattern>
        </encoder>
    </appender>

    <appender name = "DUBBO_PROVIDER" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class = "ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <File>${path.log}/dubbo-provider.log</File>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${path.log}/dubbo-provider-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy
                    class = "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] [%logger{80}] [%msg]%n
            </pattern>
        </encoder>
    </appender>

    <appender name = "FILE_ERROR" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class = "ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <File>${path.log}/business-err.log</File>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${path.log}/business-err-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy
                    class = "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] [%logger{80}] [%msg]%n
            </pattern>
        </encoder>
    </appender>

    <appender name = "SYS_FILE" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class = "ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMismatch>DENY</onMismatch>
            <onMatch>ACCEPT</onMatch>
        </filter>
        <File>${path.log}/sys.log</File>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${path.log}/sys-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy
                    class = "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] [%logger{80}] [%msg]%n
            </pattern>
        </encoder>
    </appender>

    <appender name = "ASYNC_FILE" class = "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref = "FILE" />
        <!-- add the following line -->
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name = "ASYNC_DUBBO_CONSUMER" class = "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref = "DUBBO_CONSUMER" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name = "ASYNC_DUBBO_PROVIDER" class = "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref = "DUBBO_PROVIDER" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name = "ASYNC_FILE_ERROR" class = "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref = "FILE_ERROR" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name = "ASYNC_STDOUT" class = "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref = "STDOUT" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name = "ASYNC_SYS" class = "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref = "SYS_FILE" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <logger name = "org.hibernate.type.descriptor.sql.BasicBinder" level = "${framework.level}" />
    <logger name = "org.hibernate.type.descriptor.sql.BasicExtractor"
            level = "${framework.level}" />
    <logger name = "org.hibernate.SQL" level = "${framework.level}" />
    <logger name = "org.hibernate.engine.QueryParameters" level = "${framework.level}" />
    <logger name = "org.hibernate.engine.query.HQLQueryPlan" level = "${framework.level}" />
    <logger name = "org.hibernate.cache" level = "${framework.level}" />
    <logger name = "org.springframework" level = "${framework.level}" />
    <logger name = "org.mybatis" level = "${framework.level}" />
    <logger name = "com.alibaba" level = "${framework.level}" />

    <logger name = "org.apache.ibatis" level = "INFO">
        <appender-ref ref = "ASYNC_STDOUT" />
        <appender-ref ref = "ASYNC_FILE_ERROR" />
    </logger>
    <logger name = "java.sql" level = "INFO">
        <appender-ref ref = "ASYNC_STDOUT" />
        <appender-ref ref = "ASYNC_FILE_ERROR" />
    </logger>
    <logger name = "dubbo.consumer" level = "INFO" additivity = "false">
        <appender-ref ref = "ASYNC_DUBBO_CONSUMER" />
    </logger>
    <logger name = "dubbo.provider" level = "INFO" additivity = "false">
        <appender-ref ref = "ASYNC_DUBBO_PROVIDER" />
    </logger>

    <logger name = "com.qianyi" level = "INFO" additivity = "false">
        <appender-ref ref = "ASYNC_STDOUT" />
        <appender-ref ref = "ASYNC_FILE" />
        <appender-ref ref = "ASYNC_FILE_ERROR" />
    </logger>
    <logger name = "com.liumi" level = "INFO" additivity = "false">
        <appender-ref ref = "ASYNC_STDOUT" />
        <appender-ref ref = "ASYNC_FILE" />
        <appender-ref ref = "ASYNC_FILE_ERROR" />
    </logger>
    <logger name = "com.kumi" level = "INFO" additivity = "false">
        <appender-ref ref = "ASYNC_STDOUT" />
        <appender-ref ref = "ASYNC_FILE" />
        <appender-ref ref = "ASYNC_FILE_ERROR" />
    </logger>

    <root level = "INFO">
        <appender-ref ref = "ASYNC_STDOUT" />
        <appender-ref ref = "ASYNC_SYS" />
        <appender-ref ref = "ASYNC_FILE_ERROR" />
    </root>
</configuration>